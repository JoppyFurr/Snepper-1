
Control Logic Inputs:

  [4:11]  - Instruction
  [3]     - Flag (zero-flag if lsb=0, neg-flag if lsb=1)
  [0:2]   - Step

Control Logic Outputs:

  [12:15] - Data Bus Driver
            0 → r1
            1 → r2
            2 → r3
            3 → r4
            4 → ram
            5 → ah
            6 → al
            7 → add
            8 → add-c
            9 → sub
            a → sub-c
            b → or
            c → and
            d → xor
            e → rshift
            f → I/O

  [8:11]  - Data Bus Consumer
            0 → r1
            1 → r2
            2 → r3
            3 → r4
            4 → ram
            5 → dh
            6 → dl
            7 → a1
            8 → a2
            9 → none (Configuration register?)
            a → none
            b → none
            c → none
            d → none
            e → none
            f → I/O

  [6:7]   - Address Bus Driver
            0 → PC
            1 → DC
            2 → SP
            3 → DH/DL

  [3:5]   - Address Bus Consumer
            0 → PC
            1 → DC
            2 → SP
            3 → AH/AL
            4 → none
            5 → none
            6 → none
            7 → none

  [0:2]   - Misc
            0 → PC Count
            1 → DC Count
            2 → SP Increase
            3 → SP Decrease
            4 → none (I/O control?)
            5 → none
            6 → none
            7 → Instruction complete

256 instructions:

  0     mov/nop rX, rX
 16     load    rX, [dh, rX]
 32     store   rX, [dh, rX]
 48     load    rX, [0xXXXX]
 52     store   rX, [0xXXXX]
 56     load-n  rX
 60     store-n rX
 64     mov     dh, rX
 68     mov     sp, rX
 52     loadi   rX, 0xXX
 56     loadi   hl, 0xXXXX
 57     jmp
 58     jmp-z
 59     jmp-pos
 60     jmp-nz
 61     jmp-neg
 62     cfgset  0xXX
 63     cfgclr  0xXX
 64     push    rX
 68     pop     rX
 72
 80
 96
112

128-255: ALU Instructions

128     add     rX, rX
144     addc    rX, rX
160     sub     rX, rX
176     subc    rX, rX
192     and     rX, rX
208     or      rX, rX
224     xor     rX, rX
240     lshift  rX, {1,2}
248     rshift  rX, {1,2}

--------

Call, Ret                       ×  2
Input, Output r1-r4             ×  8

 0 - Halt
 1 - RAM-only
 2 - unused
 3 - unused
 4 - unused
 5 - unused
 6 - unused
 7 - Reset
