
Control Logic Inputs:

  [4:11]  - Instruction
  [3]     - Flag (zero-flag if lsb=0, neg-flag if lsb=1)
  [0:2]   - Step

Control Logic Outputs:

  [12:15] - Data Bus Driver
            0 → r1
            1 → r2
            2 → r3
            3 → r4
            4 → ram
            5 → ah
            6 → al
            7 → add
            8 → add-c
            9 → sub
            a → sub-c
            b → or
            c → and
            d → xor
            e → rshift
            f → I/O

  [8:11]  - Data Bus Consumer
            0 → r1
            1 → r2
            2 → r3
            3 → r4
            4 → ram
            5 → dh
            6 → dl
            7 → a1
            8 → a2
            9 → IR
            a → none (Configuration register?)
            b → none
            c → none
            d → none
            e → none
            f → I/O

  [6:7]   - Address Bus Driver
            0 → PC
            1 → DC
            2 → SP
            3 → DH/DL

  [3:5]   - Address Bus Consumer
            0 → PC
            1 → DC
            2 → SP
            3 → AH/AL
            4 → none
            5 → none
            6 → none
            7 → none

  [0:2]   - Misc
            0 → PC Count
            1 → DC Count
            2 → SP Increase
            3 → SP Decrease
            4 → none (I/O control?)
            5 → none
            6 → none
            7 → Instruction complete

Assembler macros:

        ldi     dc, 0xXXXX
        ldi     sp, 0xXXXX

256 instructions:
  0 - 31   (32) : Move and load-immediate
 32 - 95   (64) : Memory instructions
 96 - ??        : Jump instructions
112 - 127  (64) : I/O instructions
128 - 255 (128) : ALU instructions


--------

  0     mov/nop rX, rX
 16     ldi     rX, 0xXX
 20     mov     dh, rX
 24     mov     dl, rX
 28     ldi     hl, 0xXXXX
 29     mov     dc, hl
 30     mov     sp, hl
 31     unused

 ??     cfg-set 0xXX
 ??     cfg-clr 0xXX

 32     load    rX, [dh, rX]
 48     store   rX, [dh, rX]
 64     load    rX, [0xXXXX]
 68     store   rX, [0xXXXX]
 72     load-n  rX
 76     store-n rX
 80     push    rX
 84     pop     rX
 93-95  unused

 96     jmp     hl
 97     unused
 98     jmp-z   hl
 99     jmp-neg hl
100     jmp-nz  hl
101     jmp-pos hl
102     jmp     0xXXXX
103     unused
104     jmp-z   0xXXXX
105     jmp-neg 0xXXXX
106     jmp-nz  0xXXXX
107     jmp-pos 0xXXXX
108     call    hl
109     call    0xXXXX
110     ret
111     unused

112     input   rX,   0xXX  (value, device)
116     output  rX,   0xXX
120     input   0xXX, 0xXX
121     output  0xXX, 0xXX
 TODO: Direct IO-to-auto-inc-memory instructions
122     input...
123
124
125
126
127

128     add     rX, rX
144     addc    rX, rX
160     sub     rX, rX
176     subc    rX, rX
192     and     rX, rX
208     or      rX, rX
224     xor     rX, rX
240     lshift  rX, {1,2}
248     rshift  rX, {1,2}
--------

Configuration register:
 0 - Halt
 1 - ROM-disable
 2 - unused
 3 - unused
 4 - unused
 5 - unused
 6 - LED-disable?
 7 - Reset
