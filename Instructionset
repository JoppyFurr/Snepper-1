
Control Logic Inputs:

  [12]    - unused
  [4:11]  - Instruction
  [3]     - Flag (zero-flag if lsb=0, neg-flag if lsb=1)
  [0:2]   - Step

Control Logic Outputs:

  [12:15] - Data Bus Driver
            0 → r1
            1 → r2
            2 → r3
            3 → r4
            4 → ram
            5 → ah
            6 → al
            7 → add
            8 → add-c
            9 → sub
            a → sub-c
            b → or
            c → and
            d → xor
            e → rshift
            f → I/O

  [8:11]  - Data Bus Consumer
            0 → r1
            1 → r2
            2 → r3
            3 → r4
            4 → ram
            5 → dh
            6 → dl
            7 → a1
            8 → a2
            9 → IR
            a → none (Configuration register?)
            b → none
            c → none
            d → none
            e → none
            f → I/O

  [6:7]   - Address Bus Driver
            0 → PC
            1 → DC
            2 → SP
            3 → DH/DL

  [3:5]   - Address Bus Consumer
            0 → PC
            1 → DC
            2 → SP
            3 → AH/AL
            4 → none
            5 → none
            6 → none
            7 → none

  [0:2]   - Misc
            0 → PC Count
            1 → DC Count
            2 → SP Increase
            3 → SP Decrease
            4 → none (I/O control?)
            5 → none
            6 → none
            7 → Instruction complete

Assembler macros to implement:

        ldi     dc, 0xXXXX
        ldi     sp, 0xXXXX

256 instructions:
 00-1f  (32) : Move and load-immediate
 20-5f  (64) : Memory instructions
 60-6f  (16) : Jump instructions
 70-7f  (16) : I/O instructions
 80-ff (128) : ALU instructions


--------

 00     mov/nop rX, rX
 10     ldi     rX, 0xXX
 14     mov     dh, rX
 18     mov     dl, rX
 1c     ldi     hl, 0xXXXX
 1d     mov     dc, hl
 1e     mov     sp, hl
 1f     unused

 20     ld      rX, [dh, rX]
 30     st      [dh, rX], rX
 40     ld      rX, [0xXXXX]
 44     st      [0xXXXX], rX
 48     ld      rX, dc
 4c     st      dc, rX
 50     pop     rX
 54     push    rX
 58-5f  unused

 60     jmp     hl
 61     unused
 62     jmp-z   hl
 63     jmp-neg hl
 64     jmp-nz  hl
 65     jmp-pos hl
 66     jmp     0xXXXX
 67     unused
 68     jmp-z   0xXXXX
 69     jmp-neg 0xXXXX
 6a     jmp-nz  0xXXXX
 6b     jmp-pos 0xXXXX
 6c     call    hl
 6d     call    0xXXXX
 6e     ret
 6f     unused

 70     input   rX,   0xXX  (value, device)
 74     output  rX,   0xXX
 78     input   0xXX, 0xXX
 79     output  0xXX, 0xXX
 TODO: Direct IO-to-auto-inc-memory instructions
 7a     input...
 7b
 7c
 7d
 7e     cfg-set 0xXX
 7f     cfg-clr 0xXX

 80     add     rX, rX
 90     addc    rX, rX
 a0     sub     rX, rX
 b0     subc    rX, rX
 c0     and     rX, rX
 d0     or      rX, rX
 e0     xor     rX, rX
 f0     lshift  rX, {1,2}
 f8     rshift  rX, {1,2}
--------

Configuration register:
 0 - Halt
 1 - ROM-disable
 2 - unused
 3 - unused
 4 - unused
 5 - unused
 6 - LED-disable?
 7 - Reset
